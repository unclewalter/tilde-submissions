service: aws-nodejs # NOTE: update this with your service name

defaults:
  stage: dev
  region: ap-southeast-2

plugins:
  - serverless-webpack

custom:
  webpackIncludeModules: true

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  region: ap-southeast-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-southeast-2:*:*"

functions:
  submit:
    handler: submit.main
    events:
      - http:
          path: submit
          method: post
          cors: true
  retrieve:
    handler: viewer.retrieve
    events:
      - http:
          path: retrieve
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:ap-southeast-2:478264992480:userpool/ap-southeast-2_eH7NnrvX1
  evaluate:
    handler: viewer.evaluate
    events:
      - http:
          path: evaluate
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:ap-southeast-2:478264992480:userpool/ap-southeast-2_eH7NnrvX1

# Pool Id: ap-southeast-2_eH7NnrvX1

# App client name: tilde-submissions-viewer
# App client id: doef16fqc6sd9b20lem1hp21n

# Sample user - u: kevan@kevanatkins.com p: mrbDP2TtE@%F$3bZ4p


# CloudFormation resource templates here
resources:
  Resources:
    SubmissionsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: submissions.tilde.net.au
  # Resources:
    tildesubmissions:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: tilde-submissions
        AttributeDefinitions:
          - AttributeName: submissionID
            AttributeType: S
        KeySchema:
          - AttributeName: submissionID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
